# Generated by Django 5.1.4 on 2025-01-02 13:00

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("course_id", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="GradeCheck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("repository_name", models.CharField(max_length=255)),
                ("student_username", models.CharField(max_length=255)),
                ("workflow_run_id", models.CharField(max_length=255, unique=True)),
                ("commit_hash", models.CharField(max_length=40)),
                (
                    "assignment_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("passed_checks", models.IntegerField(default=0)),
                ("total_checks", models.IntegerField(default=0)),
                ("check_details", models.JSONField(default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("passed", "All checks passed"),
                            ("failed", "Some checks failed"),
                            ("pending", "Checks in progress"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="badger.course",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["repository_name", "student_username"],
                        name="badger_grad_reposit_97d464_idx",
                    ),
                    models.Index(
                        fields=["workflow_run_id"],
                        name="badger_grad_workflo_6062d5_idx",
                    ),
                    models.Index(
                        fields=["course", "student_username"],
                        name="badger_grad_course__cc5f2e_idx",
                    ),
                ],
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="gradecheck",
            trigger=pgtrigger.compiler.Trigger(
                name="update_badge_status",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="\n            BEGIN\n                IF NEW.passed_checks = NEW.total_checks THEN\n                    NEW.status := 'passed';\n                ELSE\n                    NEW.status := 'failed';\n                END IF;\n                RETURN NEW;\n            END;\n        ",
                    hash="f3b86fe92c1a934d7144aeaf3d8c8a72a47ee32a",
                    operation="UPDATE OR INSERT",
                    pgid="pgtrigger_update_badge_status_04769",
                    table="badger_gradecheck",
                    when="AFTER",
                ),
            ),
        ),
    ]
